/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.openmarket.presentation;

import co.edu.unicauca.openmarket.access.CategoryRepository;
import co.edu.unicauca.openmarket.access.ProductRepository;
import co.edu.unicauca.openmarket.domain.Category;
import co.edu.unicauca.openmarket.domain.Product;
import co.edu.unicauca.openmarket.domain.service.CategoryService;
import co.edu.unicauca.openmarket.domain.service.ProductService;
import co.edu.unicauca.openmarket.infra.Messages;
import co.edu.unicauca.openmarket.presentation.commands.OMAddCategoryCommand;
import co.edu.unicauca.openmarket.presentation.commands.OMInvoker;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import reloj.frameworkobsobs.Observador;

/**
 *
 * @author SANTIAGO
 */
public class GUIAddCategory extends javax.swing.JFrame implements Observador {

    /**
     * Creates new form GUIAddCategory
     */
    private ProductService productService;
    private CategoryService categoryService;
    private OMInvoker ominvoker;
    private long idCategory = 0;

    public GUIAddCategory(ProductService productService, CategoryService categoryService) {
        initComponents();
        initializeTableCategory();
        initializeTableProducts();
        initializeTableAddCategory();
        this.productService = productService;
        this.categoryService = categoryService;
        this.ominvoker = new OMInvoker();
        this.btnDeshacer.setVisible(false);
    }

    private void addCheckbox(int column, JTable table) {
        TableColumn tb = table.getColumnModel().getColumn(column);
        tb.setCellEditor(table.getDefaultEditor(Boolean.class));
        tb.setCellRenderer(table.getDefaultRenderer(Boolean.class));
    }

    private boolean isSelected(int row, int column, JTable table) {
        return table.getValueAt(row, column) != null;
    }

    private void initializeTableProducts() {
        jtbProductos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Name", "Add"
                }
        ));

        addCheckbox(2, jtbProductos);
    }

    private void initializeTableCategory() {
        jtbVCategoria.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Name"
                }
        ));

    }

    private void initializeTableAddCategory() {

        jtbAddCategoria.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id Product", "Name", "Category"
                }
        ));
    }

    private void fillTableProduct(List<Product> listProducts) {
        initializeTableProducts();
        DefaultTableModel model = (DefaultTableModel) jtbProductos.getModel();

        Object rowData[] = new Object[3];//No columnas
        for (int i = 0; i < listProducts.size(); i++) {
            rowData[0] = listProducts.get(i).getProductId();
            rowData[1] = listProducts.get(i).getName();
            model.addRow(rowData);
        }
    }

    private void fillTableCategory(List<Category> listCategories) {
        initializeTableCategory();
        DefaultTableModel model = (DefaultTableModel) jtbVCategoria.getModel();

        Object rowData[] = new Object[3];//No columnas
        for (int i = 0; i < listCategories.size(); i++) {
            rowData[0] = listCategories.get(i).getCategoryId();
            rowData[1] = listCategories.get(i).getName();
            model.addRow(rowData);
        }
    }

    private void fillTableAddCategory(List<Product> listProducts) {
        initializeTableAddCategory();
        DefaultTableModel model = (DefaultTableModel) jtbAddCategoria.getModel();

        Object rowData[] = new Object[3];//No columnas
        for (int i = 0; i < listProducts.size(); i++) {
            rowData[0] = listProducts.get(i).getProductId();
            rowData[1] = listProducts.get(i).getName();
            rowData[2] = listProducts.get(i).getCategory().getCategoryId();
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        pnlCentral = new javax.swing.JPanel();
        pnlCategorias = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbVCategoria = new javax.swing.JTable();
        lblCategorias = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbProductos = new javax.swing.JTable();
        lblProductos = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbAddCategoria = new javax.swing.JTable();
        btnAddCategoria = new javax.swing.JButton();
        btnDeshacer = new javax.swing.JButton();

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlCategorias.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtbVCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtbVCategoria);

        pnlCategorias.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 330, 187));

        lblCategorias.setText("Seleccione una categoria: ");
        pnlCategorias.add(lblCategorias, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jtbProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane2.setViewportView(jtbProductos);

        pnlCategorias.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 387, 191));

        lblProductos.setText("Seleccione productos que se van a añadir a la ultima categoria:");
        pnlCategorias.add(lblProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, -1, -1));

        jtbAddCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jtbAddCategoria);

        pnlCategorias.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 607, 211));

        btnAddCategoria.setText("Añadir ");
        btnAddCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoriaActionPerformed(evt);
            }
        });
        pnlCategorias.add(btnAddCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 300, -1, -1));

        btnDeshacer.setText("Deshacer");
        btnDeshacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeshacerActionPerformed(evt);
            }
        });
        pnlCategorias.add(btnDeshacer, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 300, -1, -1));

        javax.swing.GroupLayout pnlCentralLayout = new javax.swing.GroupLayout(pnlCentral);
        pnlCentral.setLayout(pnlCentralLayout);
        pnlCentralLayout.setHorizontalGroup(
            pnlCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addComponent(pnlCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 873, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        pnlCentralLayout.setVerticalGroup(
            pnlCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCentralLayout.createSequentialGroup()
                .addComponent(pnlCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlCentral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlCentral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoriaActionPerformed
        try {

             btnDeshacer.setVisible(true);
            List<Product> lstProductos = productService.findAllProducts();
            List<Product> lstProductosSel = new ArrayList<>();
            List<Category> lstCategorias = categoryService.findAllCategories();
            Category categoria = lstCategorias.get(lstCategorias.size() - 1);
            idCategory = categoria.getCategoryId();
            for (int i = 0; i < jtbProductos.getRowCount(); i++) {
                if (isSelected(i, 2, jtbProductos)) {
                    Product product = lstProductos.get(i);
                    lstProductosSel.add(product);
                }
            }

            OMAddCategoryCommand comm = new OMAddCategoryCommand(categoria, lstProductosSel, productService);
            ominvoker.addCommand(comm);
            ominvoker.execute();

            if (comm.result()) {
                fillTableAddCategory(productService.findAllProductsByCategory(categoria.getCategoryId()));
            }

        } catch (Exception e) {
            Messages.showMessageDialog("No hay categorias agregadas", "Atención");

        }
    }//GEN-LAST:event_btnAddCategoriaActionPerformed

    private void btnDeshacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeshacerActionPerformed
        ominvoker.unexecute();
        if (!ominvoker.hasMoreCommands())
            this.btnDeshacer.setVisible(false);
    }//GEN-LAST:event_btnDeshacerActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCategoria;
    private javax.swing.JButton btnDeshacer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jtbAddCategoria;
    private javax.swing.JTable jtbProductos;
    private javax.swing.JTable jtbVCategoria;
    private javax.swing.JLabel lblCategorias;
    private javax.swing.JLabel lblProductos;
    private javax.swing.JPanel pnlCategorias;
    private javax.swing.JPanel pnlCentral;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actualizar() {
        fillTableProduct(productService.findAllProducts());
        fillTableCategory(categoryService.findAllCategories());
        fillTableAddCategory(productService.findAllProductsByCategory(idCategory));
    }

    public JButton getBtnAddCategoria() {
        return btnAddCategoria;
    }

    public void setBtnAddCategoria(JButton btnAddCategoria) {
        this.btnAddCategoria = btnAddCategoria;
    }

}
